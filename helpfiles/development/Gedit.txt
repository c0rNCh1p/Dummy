	                    _________________________ _______________
	                   /  _____/_   ____/__  __  \|   |__    ___/
	                  /   \__----   __)__|    |   \   | |    |
	                  \_______  /_______/_________/___| |____|
	                          )/
	DESCRIPTION
	 Gedit is the official text editor of the Gnome desktop environment. It can be
	 used to create and edit all kinds of text files. Gedit features a flexible
	 plugin system which can be used to dynamically add features to itself. It has a
	 clean and simple interface consistent with the philosophy of the Gnome Project.
	 It includes tools for editing source code and structured text such as markup
	 languages. It is free and open source software under the GPLv2, as of 2020
	 Gedit is only built with support for unix like systems.

	COMMANDS
	 gedit -s # Run Gedit in standalone mode
	 gedit -V # Show application version
	 gedit -w # Open files and block process (wait until files are closed)
	 gedit --encoding=<value> # Set character encoding format
	 gedit --g-fatal-warnings # Make all warnings fatal
	 gedit --list-encodings # Display list of supported encoding formats
	 gedit --new-document # Create a new document in an existing instance
	 gedit --new-window # Create a new top level window in existing instance

	SHORTCUTS
	 'Home'/'End' # Go to beginning and end of current line
	 'Ins' # Toggle insert/overwrite
	 'F1' # Show help
	 'F7' # Toggle cursor visibility
	 'F9' # Toggle side panel
	 'F10' # Toggle settings menu
	 'F11' # Toggle fullscreen
	 'Alt+Left'/'Alt+Rght' # Move current word left and right
	 'Alt+Up'/'Alt+Down' # Move current line up and down
	 'Alt+1...9' # Switch between files (1-9)
	 'Ctrl+a'/'Ctrl+\\' # Select or deselect all text
	 'Ctrl+c'/'Ctrl+v' # Copy and paste selected text to clipboard
	 'Ctrl+d' # Delete current line
	 'Ctrl+f' # Text search
	 'Ctrl+g' # Find the next match
	 'Ctrl+h' # Find and replace dialog
	 'Ctrl+i' # Go to line
	 'Ctrl+j' # Condense text on selected lines
	 'Ctrl+l'/'Ctrl+u' # Convert selected text to lowercase and uppercase
	 'Ctrl+m' # Comment out selected lines
	 'Ctrl+n' # Create a file in a new window
	 'Ctrl+o' # Open a file
	 'Ctrl+p' # Print the file
	 'Ctrl+q' # Quit the application
	 'Ctrl+s' # Save the file
	 'Ctrl+t' # Create a file in a new tab
	 'Ctrl+w' # Close the file
	 'Ctrl+x' # Cut selected text to clipboard
	 'Ctrl+z'/'Shft+Ctrl+Z' # Undo and redo last action
	 'Ctrl+Arrows' # Move around through the text in different directions
	 'Ctrl+Home'/'Ctrl+End' # Go to beginning or end of file
	 'Ctrl+F9' # Toggle bottom panel
	 'Ctrl+Alt+N' # Create a file in a new tab group
	 'Ctrl+Alt+PgUp'/'Ctrl+Alt+PgDn' # Switch to the next and previous file
	 'Shft+Left'/'Shft+Rght' # Select next character to left and right
	 'Shft+Up'/'Shft+Down' # Select text inline with cursor above and below
	 'Shft+F7' # Check spelling dialog
	 'Shft+Alt+Up'/'Shft+Alt+Down' # Move viewport up and down
	 'Shft+Alt+Home'/'Shft+Alt+End' # Move viewport to beginning and end of file
	 'Shft+Ctrl+A'/'Shft+Ctrl+X' # Increment and decrement number at cursor
	 'Shft+Ctrl+G' # Find last match of string
	 'Shft+Ctrl+J' # Split line at margin crossover
	 'Shft+Ctrl+K' # Deselect highlight search matches
	 'Shft+Ctrl+L' # Save all the files
	 'Shft+Ctrl+M' # Uncomment selected lines
	 'Shft+Ctrl+S' # Rename or relocate the file
	 'Shft+Ctrl+T' # Reopen the most recently closed file
	 'Shft+Ctrl+W' # Close all the files
	 'Shft+Ctrl+Up'/'Shft+Ctrl+Down' # Select text from cursor to end of next line
	   # or start of last line
	 'Shft+Ctrl+Home'/'Shft+Ctrl+End' # Select from cursor to start or end of file
	 'Shft+Ctrl+Left'/'Shft+Ctrl+Rght' # Select next and last word or special char
	 'Shft+Ctrl+~' # Invert selected case

	GUI PREFS
	 > VIEW
	   > Side Panel: <on> # Display the side panel
	   > Bottom Panel: <on> # Display the bottom panel
	   > Highlight Mode: <sh> # Set highlight mode to sh
	 > PREFERENCES
	   > VIEW
	     > Line Numbers: <on> # Display line numbers
	     > Right Margin: <on> <80> # Display right margin at column
	     > Display Grid: <on> # Display grid pattern
	     > Statusbar: <on> # Display statusbar
	     > Text Wrapping: <on> # Enable text wrapping
	     > Dont Split Words: <on> # Enable dont split words over two lines
	     > Highlight Line: <off> # Disable highlight current line
	     > Highlight Brckt: <on> # Enable highlight matching brackets
	   > EDITOR
	     > Tab Width: <4> # Set tab width to 4
	     > Spaces Instead: <off> # Disable spaces instead of tabs
	     > Auto Indent: <on> # Auto indentation for quick lists and code 
	     > Backup On Save: <off> # Disable create backup copy before saving
	     > Autosave Every: <off> # Disable set autosave files every 30 minutes
	   > FONTS & COLOURS
	     > Use System Font: <on> # Use system font
	     > Editor Font: <secondary> # Set editor font to any secondary font
	     > Colour Scheme: <Oblivion> # Set Oblivion as the color scheme
	   > PLUGINS
	     > Bookmarks: <off> # Disable bookmarks
	     > Bracket Completion: <off> # Disable bracket completion
	     > Character Map: <on> # Enable character map
	     > Code Comment: <on> # Enable code comment
	     > Color Picker: <on> # Enable color picker
	     > Document Stats: <on> # Enable document statistics
	     > Draw spaces: <off> # Turn on draw spaces when needed
	     > Embed Terminal: <on> # Enable embedded terminal
	     > External Tools: <on> # Enable external tools
	     > File Browser: <on> # Enable file browser panel
	     > Git: <off> # Disable git
	     > Ins Date Time: <on> # Enable insert date and time
	     > Join Splits: <on> # Enable join or split lines
	     > Modelines: <off> # Disable modelines
	     > Multi Edit: <off> # Disable multi edit mode
	     > Open URL Context Menu: <on> # Enable open URL context menu
	     > Python Console: <on> # Enable python console
	     > Quick Highlight: <on> # Enable quick highlight
	     > Quick Open: <on> # Enable quick open
	     > Restore Minimap: <on> # Enable restore minimap
	     > Session Saver: <on> # Enable session saver
	     > Smart Spaces: <off> # Disable smart spaces
	     > Snippets: <on> # Enable snippets
	     > Sort: <on> # Enable sort
	     > Spell Checker: <on> # Enable spell checker
	     > Text Size: <on> # Enable text size
	     > Word Completion: <off> # Disable word completion

	DEPENDS ON
	 ▸ bash # GNU Bourne Again shell
	 ▸ cairo # 2D graphics library with support for multiple output devices
	 ▸ dconf # Configuration database system
	 ▸ gcc-libs # Runtime libraries shipped by GCC
	 ▸ gdk-pixbuf2 # Image loading library
	 ▸ glib2 # Low level core library
	 ▸ glibc # GNU C Library
	 ▸ gobject-introspection-runtime
	 ▸ gsettings-desktop-schemas # GSchemas for Gnome desktop
	 ▸ gspell # Spell checking library for GTK applications
	 ▸ gtk3 # GObject based multi-platform GUI toolkit
	 ▸ hicolor-icon-theme # Freedesktop.org Hicolor icon theme
	 ▸ libgedit-amtk # Actions, Menus and Toolbars Kit for GTK applications
	 ▸ libgedit-gfls # Module dedicated to file loading and saving
	 ▸ libgedit-gtksourceview # Source code editing widget
	 ▸ libgedit-tepl # Library that eases the development of text editors and IDEs
	 ▸ libgirepository # Introspection system for GObject based runtime libraries
	 ▸ libpeas # GObject Plugin System
	 ▸ pango # Library for layout and rendering of text
	 ▸ python # Python programming language
	 ▸ python-gobject # Python bindings for GLib, GObject, GIO and GTK

	REQUIRED BY
	 ▸ gedit-plugin-markdown_preview # Plugin for markdown files
	 ▸ gedit-plugins # Collection of plugins

	ADDITIONAL
	 ▸ gedit-open-uri-context-menu-git # Plugin that adds open URL context menu item

	BINARIES
	 ▸ '/bin/gedit' # Run Gedit

	FILES
	 ▸ "$HOME/.config/gedit/accels" # User keybindings file
	 ▸ "$HOME/.config/gedit/saved-sessions.xml" # User saved sessions file	 
	 ▸ "$HOME/.local/share/gedit/plugins/plugin/name.gschema.xml" # User GSchema
	 ▸ "$HOME/.local/share/gedit/plugins/plugin/name.plugin" # User plugin file
	 ▸ "$HOME/.local/share/gedit/plugins/plugin/name.py" # User plugin script
	 ▸ "$HOME/.local/share/gedit/styles/theme.xml" # User plugin script
	 ▸ '/usr/share/gtksourceview-3.0/styles/theme.xml' # System theme
	
	COMMON USAGE
	RESTORE MNIMAP
	   # Below is a short script to install or reinstall a plugin that restores
	   # the minimap from Gedit2
	 test -d "$HOME/.local/share/gedit/plugins/restore-minimap" # Check if installed
	     sudo rm -r "$HOME/.local/share/gedit/plugins/restore-minimap" # Remove the
	   # plugin files if they are already installed to update with new ones
	 ! test -d && mkdir -p "$HOME/.local/share/gedit/plugins/" # Make if needed
	 cd "$HOME/.local/share/gedit/plugins/" # Go to plugins directory
	 git clone 'https://github.com/johnfactotum/gedit-restore-minimap.git' \
	 restore-minimap # Run the install command for the restore minimap plugin, note
	   # that the recommended installation process for different Gedit plugins may
	   # differ, and not all will come with an executable file, plugins for older
	   # versions of Gedit can also cause issues with other plugins written for
	   # the current running version
	GSCHEMAS
	   # Gedit is easy to configure with GSchemas which can help save time when
	   # reinstalling the program on a new system, these can either be modified
	   # using 'dconf-editor' or by putting them in a GSchemas script and running it
	 gsettings set org.gnome.gedit.plugins.filebrowser open-at-first-doc false
	   # Disable opening at first document in filebrowser
	 gsettings set org.gnome.gedit.plugins.time custom-format '%d/%m/%y' # Set
	   #  the custom time and date format
	 gsettings set org.gnome.gedit.preferences.editor display-right-margin true
	   # Display the right margin at the set number of columns
	 gsettings set org.gnome.gedit.preferences.editor highlight-current-line false
	   # Disable highlight current line
	 gsettings set org.gnome.gedit.preferences.editor scheme 'Oblivion' # Set color
	   # scheme to Oblivion
	 gsettings set org.gnome.gedit.preferences.editor tabs-size 4 # Set the amount
	   # of spaces in tabs to 4
	 gsettings set org.gnome.gedit.preferences.editor wrap-last-split-mode 'word'
	   # Enable splitting at words instead of characters
	 gsettings set org.gnome.gedit.preferences.editor wrap-mode 'char' # Enable
	   # joining of words at characters instead of whole words
	 gsettings set org.gnome.gedit.preferences.editor ensure-trailing-newline false
	   # Hidden schema to remove trailing newlines    
	 gsettings set org.gnome.gedit.preferences.ui bottom-panel-visible 'true'
	   # Display the bottom panel
	 gsettings set org.gnome.gedit.preferences.ui statusbar-visible 'true' # Display
	   # the statusbar
	 gsettings set org.gnome.gedit.state.window bottom-panel-active-page \
	 'GeditTerminalPanel' # Enable the terminal at startup
	 gsettings set org.gnome.gedit.state.window side-panel-active-page \
	 'GeditFileBrowserPanel' # Enable the file browser at startup, the easiest
	   # way would be to use 'dconf-editor', there are other settings in the editor
	   # which are not listed here that may be useful. GSchemas, Gconf and Dconf
	   # comprise a large backend configuration system that has its own syntax

	WEBLINKS
	 ▸ 'https://en.wikipedia.org/wiki/Gedit' # Wikipedia
	 ▸ 'https://gedit-technology.github.io/apps/gedit/index.html' # Gedit tech
	 ▸ 'https://github.com/gmate/gmate' # Gmate plugins and schemes (Gedit3)
	 ▸ 'https://github.com/GNOME/gedit' # Git repo
	 ▸ 'https://github.com/johnfactotum/gedit-restore-minimap' # Minimap plugin
	 ▸ 'https://gitlab.gnome.org/GNOME/gedit' # Core git repo
	 ▸ 'https://man.archlinux.org/man/gedit.1.en' # Manual
	 ▸ 'https://wiki.archlinux.org/title/GNOME/Gedit' # Arch wiki
	 ▸ 'https://wiki.gnome.org/Apps/Gedit' # Gnome wiki
	 ▸ 'https://www.gnome-look.org/browse?cat=279&ord=latest' # Color schemes
